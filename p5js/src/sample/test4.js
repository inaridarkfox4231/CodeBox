function setup() {
  createCanvas(400, 400);
  let col = color(20,100,200);
  let col2 = color(col);
  fill(col2);
  rect(0,0,200,200);
}
/*
colorの仕様
引数がcolor Objectの場合は何もしない
引数が配列の場合はそれを使ってp5.Colorを生成する
そうでない場合は引数を使ってp5.Colorを生成する
そういう感じみたいですね
なので
p5.Colorとして考えればよいです
そのうえで
引数が配列の場合...とか考えるといい
fillやstrokeに設定する場合は
colorを作る場合と同様の処理が行われる

つまり
_parseInputsに到着する段階では
もうすでに
4つの引数、という形式が確定しているわけだ
だから
その時点ではもう
数と文字列の二択しかないわけ

1. 引数が3つ以上の場合
この場合すべて数であることが前提となる

2. 引数が1つで文字列の場合
いろんなケースがある。たとえばプリセットの場合は#表記として計算しなおし。
その分手間がかかるので毎フレームやるのは無駄に負荷がかかるかもしれない
あらかじめ用意しておいてその中から選ぶ方がいいと思うね（それはそう）

3. 引数が2つで1つ目が数の場合
2つ目も数とみなされ、グレースケール判定になる。
この際にmaxes[2]が使われることに留意する
つまりRGBの場合はBのmaxが使われるのだ
これ知らないとやばいかもしれない
まあ通常R,G,Bのmaxをバラバラにする人はいないけどね...
HSBとHSLでもそうですよね。まあ全部1にすれば話が簡単になるからそうすべきなんだけど。

結局のところ、この3パターン。
そして、

ついでにcolorModeですが
なんと設定を保存できますね...
つまり
colorMode(RGB,1,1,1,1)のあと
colorMode(HSB,100,100,100)とすると
そのあとの
colorMode(RGB)
により
これでcolorMode(RGB,1,1,1,1)を呼び出したのと
同じ効果が得られますね（おそらく）
もちろん上書きしたい場合は上書きもできるでしょう
これは知らなかった。
*/
